package com.neobe.bto;

/**
 * This class was automatically generated by the data modeler tool.
 */

@javax.persistence.Entity
@javax.persistence.Table(name = "ProcedimentoSolicitado")
public class ProcedimentoSolicitado implements java.io.Serializable {

	static final long serialVersionUID = 1L;

	@javax.persistence.Id
	@javax.persistence.GeneratedValue(strategy = javax.persistence.GenerationType.AUTO, generator = "PROCEDIMENTOSOLICITADO_ID_GENERATOR")
	@javax.persistence.SequenceGenerator(sequenceName = "PROCEDIMENTOSOLICITADO_ID_SEQ", name = "PROCEDIMENTOSOLICITADO_ID_GENERATOR")
	private java.lang.Long id;

	@org.kie.api.definition.type.Label("Quantidade solicitada")
	private int quantidade;

	@org.kie.api.definition.type.Label("Indica se procedimento possui controle em relação a ocorrência máxima")
	private java.lang.Boolean possuiControleDeOcorrenciaMaximaNaVida;

	@org.kie.api.definition.type.Label("Indica a ocorrência máxima permitida na vida")
	private java.lang.Integer ocorrenciaMaximaNaVida;

	@org.kie.api.definition.type.Label("Indica a contagem de procedimentos solicitados e executados conforme regra de registro no prontuário")
	private java.lang.Integer contagemOcorrenciaMaximaProcedimento;

	@javax.persistence.OneToMany(cascade = {javax.persistence.CascadeType.ALL}, fetch = javax.persistence.FetchType.EAGER)
	@org.kie.api.definition.type.Label("Negativas do procedimento solicitado")
	private java.util.List<com.neobe.bto.Negativa> negativas;

	@org.kie.api.definition.type.Label("Código do procedimento")
	private java.lang.String codigo;

	@org.kie.api.definition.type.Label("Determina que o evento não possui restrições de vigência na data de solicitação")
	private java.lang.Boolean estaVigenteNaDataSolicitacao;

	@org.kie.api.definition.type.Label("Idade mínima para o procedimento")
	private java.lang.Integer idadeMinima;

	@org.kie.api.definition.type.Label("Idade máxima para o procedimento")
	private java.lang.Integer idadeMaxima;

	@org.kie.api.definition.type.Label("Indica se o procedimento é permitido para o sexo do beneficiário")
	private java.lang.Boolean ehPermitidoParaSexoDoBeneficiario;

	@org.kie.api.definition.type.Label(value = "Indica que se trata de evento odontológico com especificações que não permite execução para dente decíduo")
	private java.lang.Boolean possuiRestricaoDenteDeciduo;

	@org.kie.api.definition.type.Label(value = "Indica que se trata de evento odontológico com especificações que não permite execução para dente permanente")
	private java.lang.Boolean possuiRestricaoDentePermanente;

	public ProcedimentoSolicitado() {
	}

	public java.lang.Long getId() {
		return this.id;
	}

	public void setId(java.lang.Long id) {
		this.id = id;
	}

	public int getQuantidade() {
		return this.quantidade;
	}

	public void setQuantidade(int quantidade) {
		this.quantidade = quantidade;
	}

	public java.lang.Boolean getPossuiControleDeOcorrenciaMaximaNaVida() {
		return this.possuiControleDeOcorrenciaMaximaNaVida;
	}

	public void setPossuiControleDeOcorrenciaMaximaNaVida(
			java.lang.Boolean possuiControleDeOcorrenciaMaximaNaVida) {
		this.possuiControleDeOcorrenciaMaximaNaVida = possuiControleDeOcorrenciaMaximaNaVida;
	}

	public java.lang.Integer getOcorrenciaMaximaNaVida() {
		return this.ocorrenciaMaximaNaVida;
	}

	public void setOcorrenciaMaximaNaVida(
			java.lang.Integer ocorrenciaMaximaNaVida) {
		this.ocorrenciaMaximaNaVida = ocorrenciaMaximaNaVida;
	}

	public java.lang.Integer getContagemOcorrenciaMaximaProcedimento() {
		return this.contagemOcorrenciaMaximaProcedimento;
	}

	public void setContagemOcorrenciaMaximaProcedimento(
			java.lang.Integer contagemOcorrenciaMaximaProcedimento) {
		this.contagemOcorrenciaMaximaProcedimento = contagemOcorrenciaMaximaProcedimento;
	}

	public java.util.List<com.neobe.bto.Negativa> getNegativas() {
		return this.negativas;
	}

	public void setNegativas(
			java.util.List<com.neobe.bto.Negativa> negativas) {
		this.negativas = negativas;
	}

	public java.lang.String getCodigo() {
		return this.codigo;
	}

	public void setCodigo(java.lang.String codigo) {
		this.codigo = codigo;
	}

	public java.lang.Boolean getEstaVigenteNaDataSolicitacao() {
		return this.estaVigenteNaDataSolicitacao;
	}

	public void setEstaVigenteNaDataSolicitacao(
			java.lang.Boolean estaVigenteNaDataSolicitacao) {
		this.estaVigenteNaDataSolicitacao = estaVigenteNaDataSolicitacao;
	}

	public java.lang.Integer getIdadeMinima() {
		return this.idadeMinima;
	}

	public void setIdadeMinima(java.lang.Integer idadeMinima) {
		this.idadeMinima = idadeMinima;
	}

	public java.lang.Integer getIdadeMaxima() {
		return this.idadeMaxima;
	}

	public void setIdadeMaxima(java.lang.Integer idadeMaxima) {
		this.idadeMaxima = idadeMaxima;
	}

	public java.lang.Boolean getEhPermitidoParaSexoDoBeneficiario() {
		return this.ehPermitidoParaSexoDoBeneficiario;
	}

	public void setEhPermitidoParaSexoDoBeneficiario(
			java.lang.Boolean ehPermitidoParaSexoDoBeneficiario) {
		this.ehPermitidoParaSexoDoBeneficiario = ehPermitidoParaSexoDoBeneficiario;
	}

	public java.lang.Boolean getPossuiRestricaoDenteDeciduo() {
		return this.possuiRestricaoDenteDeciduo;
	}

	public void setPossuiRestricaoDenteDeciduo(
			java.lang.Boolean possuiRestricaoDenteDeciduo) {
		this.possuiRestricaoDenteDeciduo = possuiRestricaoDenteDeciduo;
	}

	public java.lang.Boolean getPossuiRestricaoDentePermanente() {
		return this.possuiRestricaoDentePermanente;
	}

	public void setPossuiRestricaoDentePermanente(
			java.lang.Boolean possuiRestricaoDentePermanente) {
		this.possuiRestricaoDentePermanente = possuiRestricaoDentePermanente;
	}

	public ProcedimentoSolicitado(java.lang.Long id, int quantidade,
			java.lang.Boolean possuiControleDeOcorrenciaMaximaNaVida,
			java.lang.Integer ocorrenciaMaximaNaVida,
			java.lang.Integer contagemOcorrenciaMaximaProcedimento,
			java.util.List<com.neobe.bto.Negativa> negativas,
			java.lang.String codigo,
			java.lang.Boolean estaVigenteNaDataSolicitacao,
			java.lang.Integer idadeMinima, java.lang.Integer idadeMaxima,
			java.lang.Boolean ehPermitidoParaSexoDoBeneficiario,
			java.lang.Boolean possuiRestricaoDenteDeciduo,
			java.lang.Boolean possuiRestricaoDentePermanente) {
		this.id = id;
		this.quantidade = quantidade;
		this.possuiControleDeOcorrenciaMaximaNaVida = possuiControleDeOcorrenciaMaximaNaVida;
		this.ocorrenciaMaximaNaVida = ocorrenciaMaximaNaVida;
		this.contagemOcorrenciaMaximaProcedimento = contagemOcorrenciaMaximaProcedimento;
		this.negativas = negativas;
		this.codigo = codigo;
		this.estaVigenteNaDataSolicitacao = estaVigenteNaDataSolicitacao;
		this.idadeMinima = idadeMinima;
		this.idadeMaxima = idadeMaxima;
		this.ehPermitidoParaSexoDoBeneficiario = ehPermitidoParaSexoDoBeneficiario;
		this.possuiRestricaoDenteDeciduo = possuiRestricaoDenteDeciduo;
		this.possuiRestricaoDentePermanente = possuiRestricaoDentePermanente;
	}

}